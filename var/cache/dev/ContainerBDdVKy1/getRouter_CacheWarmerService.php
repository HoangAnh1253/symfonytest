<?php

<<<<<<< HEAD:var/cache/dev/ContainerY1G2mUW/getRouter_CacheWarmerService.php
<<<<<<< HEAD:var/cache/dev/ContainerFFfIZfl/getRouter_CacheWarmerService.php
namespace ContainerFFfIZfl;

=======
namespace ContainerY1G2mUW;
>>>>>>> 9b03bdf0df8650d60f8b2bd0d2214076809a92cf:var/cache/dev/ContainerY1G2mUW/getRouter_CacheWarmerService.php
=======
namespace ContainerBDdVKy1;
>>>>>>> 021acb7f1c1b8268aafe571d0af6e812e6d8d48c:var/cache/dev/ContainerBDdVKy1/getRouter_CacheWarmerService.php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRouter_CacheWarmerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'router.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'CacheWarmer'.\DIRECTORY_SEPARATOR.'CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'CacheWarmer'.\DIRECTORY_SEPARATOR.'RouterCacheWarmer.php';

        return $container->privates['router.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'router' => '?',
        ]))->withContext('router.cache_warmer', $container));
    }
}

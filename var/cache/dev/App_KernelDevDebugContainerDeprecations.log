a:4:{i:0;a:6:{s:4:"type";i:8192;s:7:"message";s:218:"Return type of App\Entity\Category::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:68:"/Users/nguyenlamhoanganh/project/symfony/wtf/src/Entity/Category.php";s:4:"line";i:123;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:134:"/Users/nguyenlamhoanganh/project/symfony/wtf/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Method "JsonSerializable::jsonSerialize()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Entity\Category" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:94:"/Users/nguyenlamhoanganh/project/symfony/wtf/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:134:"/Users/nguyenlamhoanganh/project/symfony/wtf/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:219:"Return type of App\Entity\Equipment::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:69:"/Users/nguyenlamhoanganh/project/symfony/wtf/src/Entity/Equipment.php";s:4:"line";i:67;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:134:"/Users/nguyenlamhoanganh/project/symfony/wtf/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:248:"Method "JsonSerializable::jsonSerialize()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Entity\Equipment" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:94:"/Users/nguyenlamhoanganh/project/symfony/wtf/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:134:"/Users/nguyenlamhoanganh/project/symfony/wtf/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}}
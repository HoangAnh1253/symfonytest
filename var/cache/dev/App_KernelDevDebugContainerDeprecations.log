a:6:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:106:"D:\hoanganh\symfony\symfonytest\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:333;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:112:"D:\hoanganh\symfony\symfonytest\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:208:"Enabling the "sensio_framework_extra.router.annotations" configuration is deprecated since version 5.2. Set it to false and use the "Symfony\Component\Routing\Annotation\Route" annotation from Symfony itself.";s:4:"file";s:126:"D:\hoanganh\symfony\symfonytest\vendor\sensio\framework-extra-bundle\src\DependencyInjection\SensioFrameworkExtraExtension.php";s:4:"line";i:41;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:112:"D:\hoanganh\symfony\symfonytest\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:84:"Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:218:"Return type of App\Entity\Category::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:55:"D:\hoanganh\symfony\symfonytest\src\Entity\Category.php";s:4:"line";i:123;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:121:"D:\hoanganh\symfony\symfonytest\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Method "JsonSerializable::jsonSerialize()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Entity\Category" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:81:"D:\hoanganh\symfony\symfonytest\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:121:"D:\hoanganh\symfony\symfonytest\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:219:"Return type of App\Entity\Equipment::jsonSerialize() should either be compatible with JsonSerializable::jsonSerialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:56:"D:\hoanganh\symfony\symfonytest\src\Entity\Equipment.php";s:4:"line";i:112;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:121:"D:\hoanganh\symfony\symfonytest\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:248:"Method "JsonSerializable::jsonSerialize()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Entity\Equipment" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:81:"D:\hoanganh\symfony\symfonytest\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:121:"D:\hoanganh\symfony\symfonytest\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:150;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}}
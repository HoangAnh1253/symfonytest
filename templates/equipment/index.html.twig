{% extends 'base.html.twig' %}

{% block body %}
	<section class="p-4 my-container">
		{% if violations is defined %}
		{% for violation in violations %}
			<div class="alert alert-danger alert-dismissible" role="alert" style="display: inline-block">
                    <div>{{ violation }}</div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">X</button>
        	</div>
		{% endfor %}
		{% endif %}
		<h1>Equipment</h1>
		<form method="GET" id="search-form">
			<div class="input-group">
				<div class="form-outline">
					<input type="search" id="search-input" class="form-control" placeholder="Enter equipment's id"/>
				</div>
				<button onclick="searchEquipment()" id="search-btn" style="height: 38px" class="btn btn-primary">
					<i class="fas fa-search">Search</i>
				</button>

				<a href="/equipments" class="btn btn-info">All</a>
				{% for category in categories %}
					<a href="{{ path('app_equipment_filter_by_category', {'category': category.id}) }}" class="btn btn-info">{{ category.title }}</a>
				{% endfor %}
			</div>

		</form>

		<div style="position: relative" class="autocomplete form-outline">
			<label style="margin-top: 40px" for="">
				<b>Filter by User</b>
			</label>
			<input id="search-by-user-input" class="form-control" placeholder="Enter user's name or user's id"/>

			<p style="color: red" hidden id='search-user-equipment-notfound-error'>User not found</p>

			<button onclick="searchUserEquipments()" id="search-user-equipment-confirm" style="height: 38px" class="btn btn-primary" disabled>
				<i id="" class="fas fa-search">Search</i>
			</button>
			<form id="search-user-equipment-form" method="GET" action="" hidden></form>
		</div>
		<div class="mt-4">
			<button onclick="{addDataToModel(false,'addEquipModal')}" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#equipment">
				<i class="fa-solid fa-plus"></i>Add</button>
		</div>
		<table class="table table-hover">
			<thead class="table-light">
				<tr>
					<th class="text-center" scope="col">ID</th>
					<th class="text-center" scope="col">Name</th>
					<th class="text-center" scope="col">Description</th>
					<th class="text-center" scope="col">Category</th>
					<th class="text-center" scope="col">Status</th>
						
																																						                    <th class="text-center" scope="col">Using by</th>
					<th class="text-center" scope="col" colspan="3">Action</th>
				</tr>
			</thead>
			<tbody id="equipment-table-body">
				{% for equipment in equipments %}
					<tr id="{{equipment.id}}" class="table-row">
						<th class="text-center" scope="row">{{ equipment.id }}</th>
						<td class="equipName text-center">{{ equipment.name }}</td>
						<td class="equipDesc text-center">{{ equipment.description }}</td>
						<td class="equipCategory text-center">{{ equipment.category.name }}</td>
						<td class="text-center equipStatus">{{ equipment.assigns.first ? 'used' : 'available' }}</td>
                    	<td class="text-center equipUser">
                       	 {{ equipment.assigns.first ? equipment.assigns.first.user.name : '' }}
                    	</td>		
					
						<td class="text-right">
							<button onclick="addDataToModel('{{ equipment.id }}','edit')" value="1" class="btn btn-success text-center" data-bs-toggle="modal" data-bs-target="#editEquipModal">
								<i class="fas fa-pen-to-square"></i>Edit</button>
						</td>
						<td class="text-center">
                            <button onclick="openAssignModal({{ equipment.id }})" class="btn btn-warning"
                                data-bs-toggle="modal" data-bs-target="#assignEquipModal"
                                {{ equipment.assigns.first  ? 'hidden' : '' }}><i
                                    class="fas fa-user-check"></i>Assign</button>
                            <button onclick="unAssignEquipment(this.parentNode.parentNode.id,this)"
                                class="btn btn-secondary unassign-btn"
                                {{ equipment.assigns.first ? '' : 'hidden' }}><i
                                    class="fas fa-user-xmark"></i>Unassigned</button>
                        </td>
						<td>
							<button  onclick="addDataToModel('{{ equipment.id }}','delete')" class="btn btn-danger text-center" data-bs-toggle="modal" data-bs-target="#deleteEquipModal">Delete</button>

						</td>
					</tr>
				{% else %}
					<tr>
						<td colspan="4">no records found</td>
					</tr>
				{% endfor %}
			</tbody>
		</table>
		{{ knp_pagination_render(equipments) }}
	</section>


	<!-- Add Equipment Modal -->
	<div class="modal fade " id="equipment" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="false">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Add Equipment</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<form method="POST" action="/equipments/new" id="add-equipment-form">
					<input type="hidden" name="token" value="{{ csrf_token('add-item') }}"/>
						<div class="mb-3 form-group">
							<label for="add-name" class="form-label">Name</label>
							<input id="add-name" type="text" class="form-control" name="name" minlength="3" required>
						</div>
						<div class="mb-3 form-group">
							<label for="add-desc" class="form-label">Description</label>
							<input id="add-desc" type="text" class="form-control" name="description" required>
						</div>

						<div class="mb3">
							<label for="add-category" class="form-label">Category</label>
							<select id="add-category" class="form-select form-select-sm" aria-label=".form-select-sm example">
								{% for category in categories %}
									<option value={{ category.id }}>{{ category.title }}</option>
								{% endfor %}
							</select>
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					<button class="btn btn-primary" onclick="addEquipment()">Add Equipment</button>
				</div>
			</div>
		</div>
	</div>

	<!-- Edit Equipment Modal -->
	<div class="modal fade" id="editEquipModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="false">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Edit Equipment</h5>
					<button class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<form action="" id="edit-form">
						<div class="mb-3">
							<label for="edit-name" class="form-label">Name</label>
							<input id="edit-name" type="text" class="form-control" name="edit-name" minlength="3" required>
							<p style="color: red" hidden id='edit-name-blank-error'>Please fill in this field</p>

						</div>
						<div class="mb-3">
							<label for="edit-desc" class="form-label">Description</label>
							<input id="edit-desc" type="text" class="form-control" name="edit-desc" required>
							<p style="color: red" hidden id='edit-desc-blank-error'>Please fill in this field</p>

						</div>
						<div class="mb-3" hidden>
							<label for="edit-status" class="form-label">Status</label>
							<input class="ms-2" type="radio" name="status" id="edit-status-available"><label for="edit-status-available">Available</label>
							<input class="ms-2" type="radio" name="status" id="edit-status-used"><label for="edit-status-used">Used</label>
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					<button onclick="editEquipment()" id="edit-confirm" class="btn btn-primary" data-bs-dismiss="modal">Save
												                            changes</button>
				</div>
			</div>
		</div>
	</div>

	 <!-- Delete Equipment Modal -->
        <div class="modal fade modal-delete" id="deleteEquipModal" tabindex="-1" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Delete Equipment</h5>
                        <button type="button" class="btn-close text-white" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form method="POST" id="delete-form" action="">
						<input type="hidden" name="_method" value="DELETE"/>
						<input type="hidden" name="token" value="{{ csrf_token('delete') }}"/>
                            <div class="mb-3">
                                <label for="delete-name" class="form-label">Name</label>
                                <input id="delete-name" type="text" class="form-control" name="delete-name"
                                    value="abcd" disabled>
                            </div>
                            <div class="mb-3">
                                <label for="delete-desc" class="form-label">Description</label>
                                <input id="delete-desc" type="text" class="form-control" name="delete-desc"
                                    value="abcd" disabled>
                            </div>
                            <div class="mb-3">
                                <label for="delete-status" class="form-label">Status</label>
                                <input class="ms-2" type="radio" name="status" id="delete-status-available"
                                    disabled><label for="delete-status-available">Available</label>
                                <input class="ms-2" type="radio" name="status" id="delete-status-used"
                                    disabled><label for="delete-status-used">Used</label>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button id="delete-confirm" onclick="{deleteEquipment()}" data-bs-dismiss="modal"
                            class="btn btn-danger">Confirm</button>
                    </div>
                </div>
            </div>
        </div>
	<!-- Assign Equipment Modal -->
    	<div class="modal fade" id="assignEquipModal" tabindex="-1" aria-labelledby="exampleModalLabel"
            aria-hidden="false">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Assign Equipment</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3 autocomplete">
                            <label for="assign-euqipment-input" class="form-label">User's name or ID</label>
                            <input id="assign-equipment-input" type="text" class="form-control"
                                name="assign-equipment" value="" placeholder="Enter user's name or user's id">
                            <p style="color: red" hidden id='assign-blank-error'>Please fill in this field</p>
                            <p style="color: red" hidden id='assign-notfound-error'>User not found</p>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button onclick="assignEquipment()" id="assign-confirm" data-bs-dismiss="modal"
                            class="btn btn-primary">Save changes
						</button>
                    </div>
                </div>
            </div>
        </div>
	<script>
equipments = {{ equipments.items | json_encode() | raw }}
users = {{ users|default('') | json_encode() | raw }}
function searchEquipment() {
	searchForm = $("#search-form")
	searchInput = $("#search-input")
	serial_number = searchInput.val();

	searchForm.prop("action", `/equipments/${serial_number}`)
	searchForm.submit()
}

function addEquipment() {
	addStatus = "available"
	addCategory = $("#add-category").val()
	// $('<input>').attr('type', 'hidden').attr('name', 'status').attr('value', addStatus).appendTo(
	// '#add-equipment-form');
	$('<input>').attr('type', 'hidden').attr('name', 'category').attr('value', addCategory).appendTo('#add-equipment-form');
	$("#add-equipment-form").validate();
	$("#add-equipment-form").submit();
}

function addDataToModel(id, action) {
		$(async function () {
			if (id) {
			let equipment = {}
			for (i = 0; i < equipments.length; i ++) {
				if (equipments[i].id == id) {
					equipment = equipments[i]
					break
				}
			}
			editNameInput = $ (`#${action}-name`)
			editNameInput.val(equipment.name);

			editDescInput = $ (`#${action}-desc`)
			editDescInput.val(equipment.description)

			availableRadio = $ (`#${action}-status-available`)
			usedRadio = $ (`#${action}-status-used`)
			if (equipment.status == 'available') {
			availableRadio.prop('checked', true)
			} else {
			usedRadio.prop('checked', true)
			}
			confirmButton = $ (`#${action}-confirm`)
			confirmButton.data("id", id)

			if (action == 'edit') {
			$("#edit-name").on("input", function () {
			if (this.value == '') {
			$("#edit-name-blank-error").prop("hidden", false)
			confirmButton.prop("disabled", true)
			} else {
			$("#edit-name-blank-error").prop("hidden", true)
			if ($("#edit-desc-blank-error").prop("hidden")) 
			confirmButton.prop("disabled", false)

			}

			})

			$("#edit-desc").on("input", function () {
				if (this.value == '') {
					$("#edit-desc-blank-error").prop("hidden", false)
					confirmButton.prop("disabled", true)
				} else {
					$("#edit-desc-blank-error").prop("hidden", true)
					if ($("#edit-name-blank-error").prop("hidden")) 
					confirmButton.prop("disabled", false)

				}
			})
		}
		}
	})

}

async function editEquipment() {

	serial_number = $("#edit-confirm").data("id")
	editName = $("#edit-name").val()
	editDesc = $("#edit-desc").val()
	editStatus = $("#edit-status-available").prop("checked") ? "available" : "used"
	payload = {
		"name": editName,
		"description": editDesc
	}


	if (editName == '') {
	$("#edit-name").after("<p>Please fill in this field</p>")

	} else if (editDesc == '') {
	$("#edit-desc").after("<p>Please fill in this field</p>")
	} else {
	response = await axios.patch(`http://127.0.0.1:8000/equipments/api/${serial_number}/edit`, payload)
		editedRow = $ (`#${serial_number}`)

		editedRowName = editedRow.find(".equipName")
		editedRowName.text(response.data.name)

		editedRowDesc = editedRow.find(".equipDesc")
		editedRowDesc.text(response.data.description)

	

		//editedRowStatus = editedRow.find(".equipStatus")
		//editedRowStatus.text(response.data.status)

		for (i = 0; i < equipments.length; i ++) {
		if (equipments[i].id == serial_number) {
		equipments[i].name = editedRowName.text()
		equipments[i].description = editedRowDesc.text()
		}
		}
	}
}

function deleteEquipment(){
	let deleteForm = $("#delete-form")
    let id = $("#delete-confirm").data("id")
    deleteForm.prop("action", `/equipments/${id}`)
    deleteForm.submit()
}

 function openAssignModal(id) {
    assignBtn = $("#assign-confirm");
    assignBtn.data("id", id)
}

async function assignEquipment() {

            id = $("#assign-confirm").data("id")
            userId = $("#assign-equipment-input").val()
            selectdEquipment = equipments.find(equipment => {
                return equipment.id == id
            })
            
                payload = {
                    "user_id": userId
                }
				console.log(payload)

                response = await axios.patch(`http://127.0.0.1:8000/equipments/api/${id}/assign`, payload)
				console.log(response)
                editedRow = $(`#${id}`)

                editedRowUser = editedRow.find(".equipUser")
                editedRowUser.text(`${response.data.name}`)

				editedRowStatus = editedRow.find('.equipStatus')
                editedRowStatus.text('used')

                editedRowUnassignBtn = editedRow.find(".unassign-btn")
                editedRowUnassignBtn.prop("hidden", false)

                editedRowAssignBtn = editedRow.find(".btn-warning")
                editedRowAssignBtn.prop("hidden", true)

                assignModal = $("#assignEquipModal")
                assignModal.find(".btn-secondary").click()
            //}

}

async function unAssignEquipment(id) {
            selectdEquipment = equipments.find(equipment => {
                return equipment.id == id
            })

            response = await axios.get(`http://127.0.0.1:8000/equipments/api/${id}/unassign`)
            editedRow = $(`#${id}`)

            editedRowUser = editedRow.find(".equipUser")
            editedRowUser.text("")

			editedRowStatus = editedRow.find('.equipStatus')
            editedRowStatus.text('available')

			unassignBtn = editedRow.find(".unassign-btn")
            unassignBtn.prop("hidden", true)

            assignBtn = editedRow.find(".btn-warning")
            assignBtn.prop("hidden", false)
}

</script>
{% endblock %}
